{"version":3,"sources":["fbase.js","components/AuthForm.jsx","routes/Auth.jsx","components/Tweet.jsx","components/TweetFactory.jsx","routes/Home.jsx","components/Navigation.jsx","routes/Profile.jsx","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","toggleEditing","event","doc","id","update","onDeleteClick","ok","window","confirm","delete","refFromURL","attachmentUrl","autoFocus","src","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","idx","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","getMyTweets","where","orderBy","get","updateProfile","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eede4cef.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nexport default function AuthForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n\n  const [error, setError] = useState(\"\");\n  const onChange = (e) => {\n    // console.log(e.target.name)\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          onChange={onChange}\n          value={email}\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          className=\"authInput\"\n        />\n        <input\n          onChange={onChange}\n          value={password}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Sign up\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log In\" : \"Sign Up\"}\n      </span>\n    </div>\n  );\n}\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function Auth() {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Tweet({ tweetObj, isOwner }) {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweet/${tweetObj.id}`).update({\n      text: newTweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet ?\");\n    console.log(ok);\n    if (ok) {\n      await dbService.doc(`tweet/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  };\n\n  return (\n    <div className=\"tweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={newTweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <div>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n\n          {isOwner && (\n            <div className=\"tweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function TweetFactory({ userObj }) {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (e) => {\n    if (tweet === \"\") {\n      return;\n    }\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"tweet\").add(tweetObj);\n\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setTweet(value);\n    // console.log(value)\n  };\n  // console.log(tweets)\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      // console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        type=\"text\"\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n}\n","import Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function Home({ userObj }) {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"tweet\").onSnapshot((snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet, idx) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nexport default function Navigation({ userObj }) {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}'s Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\nexport default function Profile({ userObj, refreshUser }) {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\n  // const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    // history.push(\"/\");\n  };\n  const getMyTweets = async () => {\n    const tweets = await dbService\n      .collection(\"tweet\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(tweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyTweets();\n  }, []);\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          onChange={onChange}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nexport default function AppRouter({ refreshUser, isLoggedIn, userObj }) {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  // console.log(authService.currentUser);\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  // console.log(authService.currentUser);\n  // setInterval(() => {\n  //   console.log(authService.currentUser);\n  // }, 2000);\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing....\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Twitter Clone</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { authService } from \"./fbase\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\n// console.log(firebase);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}